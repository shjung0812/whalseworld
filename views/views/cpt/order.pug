html
	head
		title Problem Order
		style.
			#r1list {
				//border:1px solid;
				width:30%;
				height:100%;
				padding:2% 0;
				cursor:pointer;
				float:left;
				overflow:auto;

			}
			#prbbox {
				width:100%;
				height:85%;	
			}
			#prbwaiting {
				width:27%;
				height:100%;
				//border:1px solid;
				padding:2% 4%;
				cursor:pointer;
				float:left;
			}
			#prbwaiting div, #prblistboard div {
				margin:5% 0;
			}
			#prblistboard {
				width:27%;
				height:100%;
				overflow:auto;
				//border:1px solid;
				padding:2% 4%;;
				cursor:pointer;
				float:left;
			}
			.picdiv {
				width:100%;
			}
			.picdiv img {
				width:100%;
			}
		script(type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-MML-AM_CHTML")
		script(src='/socket.io/socket.io.js')
		script.
			var socket = io('/cpt');
			socket.on('connect',()=>{
				console.log('cpt connection ready');
			});

			// Global Variable;
			var rgprblist=[];
			var givenprblist=[];
			var chosenprb='';
			var chosencpt='';


			//if(typeof plist !== 'undefined'){
			var plist=!{JSON.stringify(plist)}
			var cptid=!{JSON.stringify(cptid)}
			//}



			function establishOrder(){
				if(rgprblist.length==givenprblist.length && chosencpt!=''){
					var rgprbliststring='';
	
					for(var ia=0; ia<rgprblist.length; ia++){
						if(ia!=rgprblist.length-1){
							rgprbliststring=rgprbliststring+rgprblist[ia][0]+',';
						}else{
							rgprbliststring=rgprbliststring+rgprblist[ia][0];
							
						}
					}
					socket.emit('establishOrderprb',{cptid:chosencpt,prbstr:rgprbliststring});
				}else{
					alert('the order is not completed yet');
				}
			}

			socket.on('establishOrderprbafter',function(){
				window.location.reload();
			});

			function putOrderon(ord){
				var idx=idxOf(givenprblist,chosenprb);

				if(chosenprb!=''){
					rgprblist.splice(ord,0,givenprblist[idx]);
					
					chosenprb='';
					prbOrder();
					callPrbwaiting(givenprblist);
				
				}else{
					alert('the prb is not chosen');
				}
				
			}	

			function putColoron(classN, idN,colorN){
				var cn=document.getElementsByClassName(classN);
				for(var ia=0; ia<cn.length; ia++){	
					cn[ia].style.color='';
					cn[ia].style.backgroundColor='';
				}
				document.getElementById(idN).style.backgroundColor=colorN[0];
				document.getElementById(idN).style.color=colorN[1];
			}



			function rgprb(ele){
				chosenprb=ele;
				putColoron('chosenprb',ele,['blue','white']);
			}
			function idxOf(arr,itm){
				var chk=0;
				for(var ia=0; ia<arr.length; ia++){
					if(arr[ia][0]==itm){
						chk=1;
						break;
					}
				}
				if(chk==1){
					return ia;
				}else{
					return -1;
				}
			}

			function removeFromrglist(ele){
				var idx=idxOf(rgprblist,ele);
				if(idx>-1){
					rgprblist.splice(idx,1);
				}else{
					alert('error from remove rglist');
				}
		
				prbOrder();
				callPrbwaiting(givenprblist);
				rgprb(ele);
			}
			function removeallele(parentid){
				var parent=document.getElementById(parentid);
				while(parent.firstChild){
					parent.firstChild.remove();
				}
			}


			function callPrbwaiting(prblist){
				removeallele('prbwaiting');
				var prbwaitingdiv=document.getElementById('prbwaiting');

				var waiting=[];
				for(var ia=0; ia<prblist.length; ia++){
					var chk=0;
					for(var ib=0; ib<rgprblist.length; ib++){
						if(rgprblist[ib][0]==prblist[ia][0]){
							chk=1;
							break;
						}
					}
					if(chk==0){
						waiting.push(prblist[ia])
					}
				}

				for(var ia=0; ia<waiting.length; ia++){
					var wdiv=document.createElement('div');
					var wdiva=document.createElement('A');

					var wdivadiv=document.createElement('div');
					wdiva.innerHTML=waiting[ia][1];
					wdivadiv.appendChild(wdiva);

				
					wdiv.id=waiting[ia][0];
					wdiv.className='chosenprb'
					wdiv.onclick=function(i){return function(){rgprb(i);}}(waiting[ia][0]);


					if(waiting[ia][2]!=null){
						var picdiv=document.createElement('div');
						picdiv.className='picdiv';
						var picsrc=document.createElement('img');
						picsrc.src=waiting[ia][2];
						picdiv.appendChild(picsrc);
						wdiv.appendChild(picdiv);
					}
					wdiv.appendChild(wdivadiv);
					prbwaitingdiv.appendChild(wdiv);
				}
				MathJax.Hub.Queue(["Typeset",MathJax.Hub,"prbwaiting"]);
			}		
		
			function prbOrder(){	
				removeallele('prblistboard');
				var prblistboard=document.getElementById('prblistboard');
				if(rgprblist.length==0){
					var porder0=document.createElement('div');
					var porder0a=document.createElement('A');
					porder0a.innerHTML='porder0';
					porder0.appendChild(porder0a);
					porder0.onclick=function(i){return function(){putOrderon(i);}}(0);
					prblistboard.appendChild(porder0);
				}else{
					for(var ia=0; ia<=rgprblist.length; ia++){
						if(ia!=rgprblist.length){
							var porder=document.createElement('div');
							var pcon=document.createElement('div');

							var pordera=document.createElement('A');
							var pcona=document.createElement('A');
		
							pordera.innerHTML='porder'+ia;
							var pconadiv=document.createElement('div');
							pcona.innerHTML=rgprblist[ia][1];
							pconadiv.appendChild(pcona);

						

							pcon.onclick=function(i){return function(){removeFromrglist(i);}}(rgprblist[ia][0]);
							porder.onclick=function(i){return function(){putOrderon(i);}}(ia);

							
							porder.appendChild(pordera);
	
			
							if(rgprblist[ia][2]!=null){
								var picdiv=document.createElement('div');
								picdiv.className='picdiv';
								var picsrc=document.createElement('img');
								picsrc.src=rgprblist[ia][2];
								picdiv.appendChild(picsrc);
								pcon.appendChild(picdiv);
							}	

							pcon.appendChild(pconadiv);
						

							prblistboard.appendChild(porder);
							prblistboard.appendChild(pcon);
						}else{
							var porder=document.createElement('div');

							var pordera=document.createElement('A');
		
							pordera.innerHTML='porder'+ia;

							porder.onclick=function(i){return function(){putOrderon(i);}}(ia);

							porder.appendChild(pordera);

							prblistboard.appendChild(porder);


						}
					}	
				}
				MathJax.Hub.Queue(["Typeset",MathJax.Hub,"prblistboard"]);
			}


			function callPrblist(plist){
				socket.emit('levelplist',{plist:plist.split(',')});
			}	
			socket.on('levelplistafter',function(a){
				rgprblist=[];
				givenprblist=[];
				removeallele('prbwaiting')
				for(var ia=0; ia<a.plist.length; ia++){
					rgprblist.push([a.plist[ia][0],a.plist[ia][1],a.plist[ia][8]])
					givenprblist.push([a.plist[ia][0],a.plist[ia][1],a.plist[ia][8]])
				}
				prbOrder();
			});

			function callR1list(){
				socket.emit('levelCallr1list');
			}
			callR1list();
			socket.on('levelCallr1listafter',function(a){
				var r1listdiv=document.getElementById('r1list');
				for(var ia=a.a.length-1; ia>=0; ia--){
					var r1div=document.createElement('div');
					var r1diva=document.createElement('A');
					r1diva.innerHTML=a.a[ia].listinfo;
					r1div.appendChild(r1diva);
					r1div.onclick=function(i,j){return function(){callPrblist(i);chosencpt=j;}}(a.a[ia].prblist,a.a[ia].cptid);
					r1listdiv.appendChild(r1div);	
				}
			});




			if(plist !=0){
				callPrblist(plist);
				chosencpt=cptid;
			}



		
	body
		div
			h2 Prb Order
		div
			div
				button(onclick='establishOrder();') Establish Order
		div(id='prbbox')
			div(id='r1list')
			div(id='prblistboard')
			div(id='prbwaiting')
