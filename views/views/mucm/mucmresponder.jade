html
	
	head
		title Responder
		script(src='/socket.io/socket.io.js')
		script(src="https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js")
		script.
			var socket=io();
			var peer=new Peer();
			var Call;
			var Stream;

			//window.onload=function(){
				
				peer.on('call',function(call){
					Call=call
					alert(' The called by caller with this id' + peer.id);
				var constraints={video:true,audio:true}
				navigator.mediaDevices.getUserMedia(constraints).then(function(stream){
					var myvideo=document.getElementById('myvideo');
					myvideo.srcObject = stream;
					myvideo.onloadedmetadata = function(e){
						myvideo.play();		
					}
		
					Stream=stream;
					call.answer(stream)
						call.on('stream',function(remoteStream){
							var instructorvideo=document.getElementById('instructorvideo');
							instructorvideo.srcObject = remoteStream;
							instructorvideo.onloadedmetadata = function(e){
								instructorvideo.play();		
							}

						});


				});
				});

			//}
			

			function terminate(){
				console.log('terminate function called');
				Call.close();
			}

			function SentId(){
				var userid=document.getElementById('userid').value;
				if(userid==''){
					alert('insert username, the operation cancled');
				}else{
					socket.emit('mucmpeeridsent',{userid:userid,peerid:peer.id});
					alert('id sent'+peer.id)
					
				}
				
			}

			peer.on('close',function(){
				console.log('connection closed');
	

			});


			peer.on('open',function(){
				alert('it is opened,'+peer.id);
			});
			function calleecall(){
				socket.emit('mucmcallerreset',{peerid:peer.id});
			}
			
	body
		div
			h2 Responder MUCM
		div
			div
				a username
			div
				a(id='uname')
		div
			input(type='text', id='userid')
		div
			button(onclick='SentId()') Send Id
		div
			button(onclick="terminate()") Terminate Connection
		div
			button(onclick="calleecall()") call again
		div
			video(id='myvideo')
		div
			video(id='instructorvideo')
		


