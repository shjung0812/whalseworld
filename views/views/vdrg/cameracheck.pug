html
	body

		div
			button(onclick='audioConntouser(1)') Video on
		div(id='videobox')
		div(id='mentorvideobox')
			video(id='mentorvideo' autoplay  playsinline controls='false' muted)
		script.
			async function getConnectedDevices(type){
				const devices = await navigator.mediaDevices.enumerateDevices();
				return devices.filter(device => device.kind === type);
			}


			async function everythingReady(){
				/*
					checklist
						getusermedia test,
						audio input test,
				*/

				var equipChecklist=[];
				var msglist=[];

				const navimedia=await navigator.mediaDevices;
				if(navimedia !== undefined){
					equipChecklist.push(1);
					msglist.push('navigator.mediaDevices ok')
	
					const audios= await getConnectedDevices('audioinput');
					if(audios && audios.length>0){
						equipChecklist.push(1);
						msglist.push('audio input ok')
					}else{
						equipChecklist.push(0);
						msglist.push('audio input FAILED')
					}
				
					const videos= await getConnectedDevices('videoinput');
					if(videos && videos.length>0){
						equipChecklist.push(1);
						msglist.push('video input ok')
					}else{
						equipChecklist.push(0);
						msglist.push('video input FAILED')
					}

				}else{
					equipChecklist.push(0);
					equipChecklist.push(0);
					const msg = 'navigator.mediaDevices is not found'
					msglist.push(msg)
				}
			
				return {equipcheck:equipChecklist, msglist:msglist}

			}

			async function audioConntouser(opt){
				const equipCheck= await everythingReady();
				console.log(equipCheck);
				if(opt==1 || opt==2){
					var constraints={video:{width:800, height:480},audio:true}
					//var constraints={video:{width:1920, height:1080},audio:true}
				}else{
					var constraints={video:false,audio:true}
				}
				navigator.mediaDevices.getUserMedia(constraints).then(async stream =>{

				var mentorvideo=document.getElementById('mentorvideo');
				mentorvideo.srcObject = stream;

				mentorvideo.onloadedmetadata = function(e){
					mentorvideo.play();		
				}
				});
			
			}



